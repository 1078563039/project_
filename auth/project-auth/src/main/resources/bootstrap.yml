server:
  port: 31001
  servlet:
    context-path: /auth

spring:
  application:
    name: project-auth
  cloud:
    nacos:
      server-addr: 192.168.58.128:30002
      config:
        group: project
        namespace: 9de11b6a-a3e8-42b5-8130-39a4f72e9d53
        file-extension: yml
      discovery:
        group: ${spring.cloud.nacos.config.group}
        namespace: ${spring.cloud.nacos.config.namespace}
    sentinel:
      eager: true
      transport:
        dashboard: 192.168.58.128:30006
        port: 8791
      datasource: # sentinel用nacos作为数据源的配置
        flux-control: # 流控管理（这个名称可以自定义）
          nacos: # 告诉sentinel用nacos作为数据源
            data-id: feign-project-auth_flux-control_config.json # 配置中心里执行文件的dataId
            server-addr: ${spring.cloud.nacos.server-addr}
            namespace: ${spring.cloud.nacos.config.namespace}
            group-id: ${spring.cloud.nacos.config.group}
            data-type: json
            rule-type: flow # 指定文件配置的是那种规则
        degrade-control: # 熔断管理（这个名称可以自定义）
          nacos:
            data-id: feign-project-auth_degrade-control_config.json
            server-addr: ${spring.cloud.nacos.server-addr}
            namespace: ${spring.cloud.nacos.config.namespace}
            group-id: ${spring.cloud.nacos.config.group}
            data-type: json
            rule-type: degrade
        param-flow-control: # 热点参数管理（这个名称可以自定义）
          nacos:
            data-id: feign-project-auth_hot-flux_config.json
            server-addr: ${spring.cloud.nacos.server-addr}
            namespace: ${spring.cloud.nacos.config.namespace}
            group-id: ${spring.cloud.nacos.config.group}
            data-type: json
            rule-type: param-flow
  shardingsphere:
    props:
      sql:
        show: true
    datasource:
      names: ds-master-1,ds-slave-1
      ds-master-1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://192.168.58.128:30001/project_auth?useSSL=false&useUnicode=true&characterEncoding=utf8&autoReconnect=true&allowPublicKeyRetrieval=true
        username: root
        password: 123456
        maxPoolSize: 20
        minPoolSize: 5
      ds-slave-1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://192.168.58.128:30001/project_auth?useSSL=false&useUnicode=true&characterEncoding=utf8&autoReconnect=true&allowPublicKeyRetrieval=true
        username: root
        password: 123456
        maxPoolSize: 20
        minPoolSize: 5
    sharding:
      default-data-source-name: ds-master-1
    masterslave:
      name: ms
      load-balance-algorithm-type: round_robin
      master-data-source-name: ds-master-1
      slave-data-source-names: ds-slave-1
  redis:
    host: 192.168.58.128
    database: 0
    port: 30003
  rabbitmq:
    host: 192.168.58.128
    port: 30004
    username: guest
    password: guest
    virtual-host: /

seata:
#  application-id: ${spring.application.name}
  tx-service-group: default_tx_group
  registry:
    type: nacos
    nacos:
      application: seata-server
      server-addr: 192.168.58.128:30002
      namespace: 24ed7554-3963-4494-a518-417f685c1b94
      cluster: default
      group: SEATA_GROUP
  config:
    type: nacos
    nacos:
      server-addr: 192.168.58.128:30002
      namespace: 24ed7554-3963-4494-a518-417f685c1b94
      group: SEATA_GROUP
#      data-id: seataServer.properties

feign:
  sentinel:
    enabled: true
  hystrix:
    enabled: false
  client:
    config:
      default:
        readTimeout: 60000
        connectTimeout: 60000

#logging:
#  level:
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"

#    root: DEBUG


